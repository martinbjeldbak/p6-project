task :default => [:compile]

root = 'master'
compiler = 'pdflatex'
options = '-interaction=nonstopmode'
bib = 'bibtex'

task :quick do
  compileStr = "#{compiler} #{options} #{root}"

  system(compileStr + ' > output')

  task(:findErrors).invoke('output')
  task(:clean).invoke
end

task :compile do
  compileStr = '%s %s %s' % [compiler, options, root]
  bibtexStr = '%s %s' % [bib, root]

  system(compileStr + ' > /dev/null')
  system(bibtexStr + ' > /dev/null')
  system(compileStr + ' > /dev/null')
  system(compileStr + ' > output')

  task(:findErrors).invoke('output')
  task(:clean).invoke
end

task :clean do
  rm = 'rm -rf'
  tmpAll = %w[aux log nav snm tdo
              toc vrb bbl bcf blg out bib.bak thm
              run.xml].map{|f| '*.' + f}.join(' ')
  tmpFull = %w[output].join(' ')

  system("#{rm} #{tmpAll} #{tmpFull}") 
end

task :findErrors, :file do |t, args|
  error = false 

  File.open(args[:file], 'r').each do |line|
    error = true if line.include?('!')
  end

  if error
    File.open(args[:file], 'r').each{|l| puts l}
    puts '---- ERROR COMPILING, CHECK ABOVE LOG ----'
  end
end
